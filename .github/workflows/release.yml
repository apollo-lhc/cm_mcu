name: Release

on:
  push:
    tags: 
      - 'v*'
  workflow_dispatch:

jobs:
   tagged_release:
     runs-on: ubuntu-latest
     steps:
     - name: Code checkout
       uses: actions/checkout@v4
     - name: Install Embedded Arm Toolchain arm-none-eabi-gcc
       uses: carlosperate/arm-none-eabi-gcc-action@v1.8.1
       with:
        release: '13.2.Rel1' # The arm-none-eabi-gcc release to use.
     - name: GitHub Tag Name
       run: |
         echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
         echo "Tag name from github.ref_name: >${{  github.ref_name }}<"
     - name: make with GCC for Rev1
       run: |
        make clean REV1=1
        make -k NO_ECN001=1 REV1=1
        cp projects/cm_mcu/gcc/cm_mcu.bin cm_mcu_noecn001_rev1.bin
        cp projects/cm_mcu/gcc/cm_mcu.axf cm_mcu_noecn001_rev1.axf
        make clean REV1=1
        make -k REV1=1
        mkdir -p ${{github.ref_name}}/REV1
        cp projects/cm_mcu/gcc/cm_mcu.bin ${{github.ref_name}}/REV1/cm_mcu_rev1.bin
        cp projects/cm_mcu/gcc/cm_mcu.axf ${{github.ref_name}}/REV1/cm_mcu_rev1.axf
        cp projects/boot_loader/gcc/bl_main.bin ${{github.ref_name}}/REV1/bl_main_rev1.bin
        cp projects/boot_loader/gcc/bl_main.axf ${{github.ref_name}}/REV1/bl_main_rev1.axf
        make REV1=1 release
        mv PL_MEM_CM_rev1.xml ${{github.ref_name}}/REV1
        mv CornellCM_MCU.tar.gz ${{github.ref_name}}/REV1
        tar zcvpf cm_mcu_rev1_${{github.ref_name}}.tar.gz ${{github.ref_name}}/REV1
     - name: make with GCC for Rev2
       run: |
        make clean REV2=1
        make -k NO_ECN001=1 REV2=1
        cp projects/cm_mcu/gcc/cm_mcu.bin cm_mcu_noecn001_rev2.bin
        cp projects/cm_mcu/gcc/cm_mcu.axf cm_mcu_noecn001_rev2.axf
        make clean REV2=1
        make -k REV2=1
        mkdir -p ${{github.ref_name}}/REV2
        cp projects/cm_mcu/gcc/cm_mcu.bin ${{github.ref_name}}/REV2/cm_mcu_rev2.bin
        cp projects/cm_mcu/gcc/cm_mcu.axf ${{github.ref_name}}/REV2/cm_mcu_rev2.axf
        cp projects/boot_loader/gcc/bl_main.bin ${{github.ref_name}}/REV2/bl_main_rev2.bin
        cp projects/boot_loader/gcc/bl_main.axf ${{github.ref_name}}/REV2/bl_main_rev2.axf
        make REV2=1 release
        mv PL_MEM_CM_rev2.xml ${{github.ref_name}}/REV2
        mv CornellCM_MCU.tar.gz ${{github.ref_name}}/REV2
        tar zcvpf cm_mcu_rev2_${{github.ref_name}}.tar.gz ${{github.ref_name}}/REV2
     - name: make with GCC for Rev3
       run: |
        make clean REV3=1
        make -k REV3=1
        mkdir -p ${{github.ref_name}}/REV3
        cp projects/cm_mcu/gcc/cm_mcu.bin ${{github.ref_name}}/REV3/cm_mcu_rev3.bin
        cp projects/cm_mcu/gcc/cm_mcu.axf ${{github.ref_name}}/REV3/cm_mcu_rev3.axf
        cp projects/boot_loader/gcc/bl_main.bin ${{github.ref_name}}/REV3/bl_main_rev3.bin
        cp projects/boot_loader/gcc/bl_main.axf ${{github.ref_name}}/REV3/bl_main_rev3.axf
        make REV3=1 release
        mv PL_MEM_CM_rev3.xml ${{github.ref_name}}/REV3
        mv CornellCM_MCU.tar.gz ${{github.ref_name}}/REV3
        tar zcvpf cm_mcu_rev3_${{github.ref_name}}.tar.gz ${{github.ref_name}}/REV3
     - name: test
       run: pwd; ls -R ; find . -type f -name '*.axf' -print
     - uses: "marvinpinto/action-automatic-releases@latest"
       with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            ${{github.ref_name}}/**
            *.tar.gz
